/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Web para manejar solicitudes HTTP
    implementation 'org.springframework:spring-web:5.3.20'

    // JUnit 5 para pruebas unitarias
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // Mockito para pruebas unitarias y mocks
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.mocking.service.UserService'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Ensure the generated JAR has a Main-Class attribute in MANIFEST.MF
jar {
    manifest {
        attributes(
            'Main-Class': 'com.example.mocking.service.UserService'
        )
    }
}
